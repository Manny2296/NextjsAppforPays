{"ast":null,"code":"import _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport _parseInt from \"@babel/runtime-corejs2/core-js/parse-int\";\nimport _Object$values from \"@babel/runtime-corejs2/core-js/object/values\";\nimport _Promise from \"@babel/runtime-corejs2/core-js/promise\";\nimport _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nvar _jsxFileName = \"C:\\\\Users\\\\Riano\\\\Repo\\\\NextjsAppforPays\\\\components\\\\TableUsers.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Component } from 'react';\nimport MaterialTable from 'material-table';\nimport { forwardRef } from 'react';\nimport AddBox from '@material-ui/icons/AddBox';\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\nimport Check from '@material-ui/icons/Check';\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\nimport ChevronRight from '@material-ui/icons/ChevronRight';\nimport Clear from '@material-ui/icons/Clear';\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\nimport Edit from '@material-ui/icons/Edit';\nimport FilterList from '@material-ui/icons/FilterList';\nimport FirstPage from '@material-ui/icons/FirstPage';\nimport LastPage from '@material-ui/icons/LastPage';\nimport Remove from '@material-ui/icons/Remove';\nimport SaveAlt from '@material-ui/icons/SaveAlt';\nimport Search from '@material-ui/icons/Search';\nimport ViewColumn from '@material-ui/icons/ViewColumn';\nimport { _createUser } from \"../actions/userAction\";\nimport { _updateUser } from \"../actions/userAction\";\nimport { _deleteUser } from \"../actions/userAction\";\nimport \"./Table.scss\";\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\nimport Paper from '@material-ui/core/Paper';\nconst columns = [{\n  title: 'Id',\n  field: 'idusuario',\n  type: 'numeric',\n  hidden: true\n}, {\n  title: 'Nombre',\n  field: 'name'\n}, {\n  title: 'Apellido',\n  field: 'surname'\n}, {\n  title: 'No Documento',\n  field: 'id_Document',\n  type: 'numeric'\n}, {\n  title: 'E-mail',\n  field: 'mail'\n}, {\n  title: 'Telefono',\n  type: 'numeric',\n  field: 'telephone'\n}];\nconst tableIcons = {\n  Add: forwardRef((props, ref) => __jsx(AddBox, _extends({}, props, {\n    ref: ref,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }))),\n  Check: forwardRef((props, ref) => __jsx(Check, _extends({}, props, {\n    ref: ref,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }))),\n  Clear: forwardRef((props, ref) => __jsx(Clear, _extends({}, props, {\n    ref: ref,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }))),\n  Delete: forwardRef((props, ref) => __jsx(DeleteOutline, _extends({}, props, {\n    ref: ref,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }))),\n  DetailPanel: forwardRef((props, ref) => __jsx(ChevronRight, _extends({}, props, {\n    ref: ref,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }))),\n  Edit: forwardRef((props, ref) => __jsx(Edit, _extends({}, props, {\n    ref: ref,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }))),\n  Export: forwardRef((props, ref) => __jsx(SaveAlt, _extends({}, props, {\n    ref: ref,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }))),\n  Filter: forwardRef((props, ref) => __jsx(FilterList, _extends({}, props, {\n    ref: ref,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }))),\n  FirstPage: forwardRef((props, ref) => __jsx(FirstPage, _extends({}, props, {\n    ref: ref,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }))),\n  LastPage: forwardRef((props, ref) => __jsx(LastPage, _extends({}, props, {\n    ref: ref,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }))),\n  NextPage: forwardRef((props, ref) => __jsx(ChevronRight, _extends({}, props, {\n    ref: ref,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }))),\n  PreviousPage: forwardRef((props, ref) => __jsx(ChevronLeft, _extends({}, props, {\n    ref: ref,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }))),\n  ResetSearch: forwardRef((props, ref) => __jsx(Clear, _extends({}, props, {\n    ref: ref,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }))),\n  Search: forwardRef((props, ref) => __jsx(Search, _extends({}, props, {\n    ref: ref,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }))),\n  SortArrow: forwardRef((props, ref) => __jsx(ArrowDownward, _extends({}, props, {\n    ref: ref,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }))),\n  ThirdStateCheck: forwardRef((props, ref) => __jsx(Remove, _extends({}, props, {\n    ref: ref,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }))),\n  ViewColumn: forwardRef((props, ref) => __jsx(ViewColumn, _extends({}, props, {\n    ref: ref,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  })))\n};\n\nclass TableUsers extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      users: [] //isLoading: false // Par défaut à false car il n'y a pas de chargement tant qu'on ne lance pas de recherche        \n\n    };\n\n    this._loadUsuarios();\n  }\n\n  async _loadUsuarios() {\n    const res = await fetch('http://localhost:8080/users/');\n    const data = await res.json(); //console.log(`Show data fetched. Count: ${data.length}`  );\n\n    this.setState({\n      users: [...this.state.users, ...data] // une autre sintaxys  films: this.state.films.concat(data.results)\n      // films: data.results,  // une autre sintaxys  films: this.state.films.concat(data.results)\n\n    }); //  console.log(\"Rowsusu\"+this.state.numRows)\n  }\n\n  render() {\n    return __jsx(Paper, {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, __jsx(MaterialTable, {\n      icons: tableIcons,\n      title: \"Lista de Usuarios\",\n      columns: columns,\n      data: this.state.users,\n      actions: [{\n        icon: AccountCircleIcon,\n        tooltip: 'User Profile',\n        onClick: (event, rowData) => //alert(\"You saved \" + rowData.name)window.location.href\n        window.location.href = `/user/${rowData.id_Document}`\n      }],\n      editable: {\n        onRowAdd: newData => new _Promise(resolve => {\n          setTimeout(() => {\n            resolve();\n\n            _createUser(newData);\n\n            this.setState({\n              users: [...this.state.users, newData]\n            });\n          }, 600);\n        }),\n        onRowUpdate: (newData, oldData) => new _Promise(resolve => {\n          setTimeout(() => {\n            resolve();\n\n            if (oldData) {\n              let toPut = _Object$values(newData);\n\n              var arraytoPut = [{\n                idusuario: toPut[0],\n                name: toPut[1],\n                surname: toPut[2],\n                id_Document: toPut[3],\n                email: toPut[4],\n                telephone: _parseInt(toPut[6])\n              }]; //   console.log(\"toPut> \" + JSON.stringify(toPut))\n\n              _updateUser(arraytoPut);\n\n              this.setState(() => {\n                //  console.log(\"User to be update: \" + oldData.tableData.id)\n                // console.log(\"User to be update: \" + JSON.stringify(this.state.users[oldData.tableData.id]))\n                this.state.users[oldData.tableData.id] = newData; // console.log(\"User already update: \" + JSON.stringify(this.state.users[oldData.tableData.id]))\n                //console.log(\"Do something to merge data\" + JSON.stringify([...this.state.users, newData]) )\n\n                return {\n                  users: [...this.state.users, newData]\n                };\n              });\n            }\n          }, 600);\n        }),\n        onRowDelete: oldData => new _Promise(resolve => {\n          setTimeout(() => {\n            resolve();\n            console.log(_JSON$stringify(oldData));\n\n            _deleteUser(oldData);\n\n            this.setState(() => {\n              return {\n                users: this.state.users.filter(item => item.idusuario !== oldData.idusuario)\n              };\n            });\n          }, 600);\n        })\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default TableUsers;","map":{"version":3,"sources":["C:/Users/Riano/Repo/NextjsAppforPays/components/TableUsers.js"],"names":["Component","MaterialTable","forwardRef","AddBox","ArrowDownward","Check","ChevronLeft","ChevronRight","Clear","DeleteOutline","Edit","FilterList","FirstPage","LastPage","Remove","SaveAlt","Search","ViewColumn","_createUser","_updateUser","_deleteUser","AccountCircleIcon","Paper","columns","title","field","type","hidden","tableIcons","Add","props","ref","Delete","DetailPanel","Export","Filter","NextPage","PreviousPage","ResetSearch","SortArrow","ThirdStateCheck","TableUsers","constructor","state","users","_loadUsuarios","res","fetch","data","json","setState","render","icon","tooltip","onClick","event","rowData","window","location","href","id_Document","onRowAdd","newData","resolve","setTimeout","onRowUpdate","oldData","toPut","arraytoPut","idusuario","name","surname","email","telephone","tableData","id","onRowDelete","console","log","filter","item"],"mappings":"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","sourcesContent":["import  { Component } from 'react';\r\nimport MaterialTable from 'material-table';\r\nimport { forwardRef } from 'react';\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport { _createUser } from \"../actions/userAction\";\r\nimport { _updateUser } from \"../actions/userAction\";\r\nimport { _deleteUser } from \"../actions/userAction\";\r\nimport \"./Table.scss\"\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nconst columns =  [\r\n {title:'Id', field:'idusuario', type:'numeric', hidden: true},\r\n  { title: 'Nombre', field: 'name' },\r\n  { title: 'Apellido', field: 'surname' },\r\n  {\r\n    title: 'No Documento',\r\n    field:'id_Document',\r\n    type: 'numeric',\r\n  },\r\n  {\r\n    title: 'E-mail',\r\n    field: 'mail'\r\n  },\r\n  {\r\n    title: 'Telefono',\r\n    type: 'numeric',\r\n    field:'telephone'\r\n  },\r\n\r\n]\r\nconst tableIcons = {\r\n  Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n  Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n  Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n  DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n  Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n  Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n  Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n  FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n  LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n  NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n  PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n  ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n  SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\r\n  ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n  ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />),\r\n  \r\n};\r\n\r\nclass TableUsers extends Component {\r\n  constructor (props) {\r\n    super(props)\r\n    this.state = {\r\n      users: [],\r\n      \r\n      //isLoading: false // Par défaut à false car il n'y a pas de chargement tant qu'on ne lance pas de recherche        \r\n     }\r\n     this._loadUsuarios() \r\n  }\r\n  async _loadUsuarios(){\r\n    const res = await fetch('http://localhost:8080/users/');\r\n    const data = await res.json();\r\n    \r\n    //console.log(`Show data fetched. Count: ${data.length}`  );\r\n    \r\n \r\n    this.setState(\r\n      { \r\n        users: [...this.state.users, ...data],  // une autre sintaxys  films: this.state.films.concat(data.results)\r\n       // films: data.results,  // une autre sintaxys  films: this.state.films.concat(data.results)\r\n     \r\n       \r\n      }\r\n    )\r\n  //  console.log(\"Rowsusu\"+this.state.numRows)\r\n  }\r\n \r\n  render() {\r\n  \r\n   \r\n    return (\r\n      \r\n     <Paper className='container'>\r\n    <MaterialTable\r\n       icons={tableIcons}\r\n       \r\n       title=\"Lista de Usuarios\"\r\n       columns={columns}\r\n       data={this.state.users}\r\n       actions={[\r\n        {\r\n          icon: AccountCircleIcon,\r\n          tooltip: 'User Profile',\r\n          onClick: (event, rowData) => //alert(\"You saved \" + rowData.name)window.location.href\r\n          window.location.href = `/user/${rowData.id_Document}`\r\n           \r\n        }\r\n       ]}\r\n    \r\n      editable={{\r\n        onRowAdd: newData =>\r\n          new Promise(resolve => {\r\n            setTimeout(() => {\r\n              resolve();\r\n              _createUser(newData)\r\n             \r\n              this.setState(\r\n                { \r\n                  users: [...this.state.users,newData]\r\n                }\r\n              )              \r\n            }, 600);\r\n          }),\r\n        onRowUpdate: (newData, oldData) =>\r\n          new Promise(resolve => {\r\n            setTimeout(() => {\r\n              resolve();\r\n              if (oldData) {                            \r\n                let toPut = Object.values(newData);\r\n                var arraytoPut = [{idusuario:toPut[0],name:toPut[1],surname:toPut[2],id_Document:toPut[3],email:toPut[4],telephone:parseInt(toPut[6])}]\r\n               //   console.log(\"toPut> \" + JSON.stringify(toPut))\r\n                  _updateUser(arraytoPut);              \r\n                  this.setState(() => {\r\n                  //  console.log(\"User to be update: \" + oldData.tableData.id)\r\n\r\n                   // console.log(\"User to be update: \" + JSON.stringify(this.state.users[oldData.tableData.id]))\r\n                    this.state.users[oldData.tableData.id] = newData;\r\n                // console.log(\"User already update: \" + JSON.stringify(this.state.users[oldData.tableData.id]))\r\n                    //console.log(\"Do something to merge data\" + JSON.stringify([...this.state.users, newData]) )\r\n                  return({\r\n                    users:[...this.state.users, newData]\r\n                  \r\n                  })                 \r\n                  });\r\n                                                         \r\n              }\r\n            }, 600);\r\n          }),\r\n        onRowDelete: oldData =>\r\n          new Promise(resolve => {\r\n            setTimeout(() => {\r\n              resolve();\r\n              console.log(JSON.stringify(oldData))\r\n              _deleteUser(oldData)\r\n              this.setState(() => {\r\n      \r\n                return { users:this.state.users.filter(item => item.idusuario !== oldData.idusuario) };\r\n              });\r\n            }, 600);\r\n          }),\r\n     \r\n      }}\r\n    />\r\n    </Paper>\r\n    \r\n    \r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default TableUsers;\r\n"]},"metadata":{},"sourceType":"module"}