{"ast":null,"code":"import _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport _parseInt from \"@babel/runtime-corejs2/core-js/parse-int\";\nimport _Object$values from \"@babel/runtime-corejs2/core-js/object/values\";\nimport _Promise from \"@babel/runtime-corejs2/core-js/promise\";\nimport _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nvar _jsxFileName = \"C:\\\\Users\\\\Riano\\\\Repo\\\\NextjsAppforPays\\\\components\\\\TableProducts.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Component } from 'react';\nimport MaterialTable from 'material-table';\nimport { forwardRef } from 'react';\nimport AddBox from '@material-ui/icons/AddBox';\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\nimport Check from '@material-ui/icons/Check';\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\nimport ChevronRight from '@material-ui/icons/ChevronRight';\nimport Clear from '@material-ui/icons/Clear';\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\nimport Edit from '@material-ui/icons/Edit';\nimport FilterList from '@material-ui/icons/FilterList';\nimport FirstPage from '@material-ui/icons/FirstPage';\nimport LastPage from '@material-ui/icons/LastPage';\nimport Remove from '@material-ui/icons/Remove';\nimport SaveAlt from '@material-ui/icons/SaveAlt';\nimport Search from '@material-ui/icons/Search';\nimport ViewColumn from '@material-ui/icons/ViewColumn';\nimport { _createProduct } from \"../actions/productAction\";\nimport { _updateProduct } from \"../actions/productAction\";\nimport { _deleteProduct } from \"../actions/productAction\";\nimport \"./Table.scss\";\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\nimport Paper from '@material-ui/core/Paper';\nimport LocalMallIcon from '@material-ui/icons/LocalMall';\nconst columns = [{\n  title: 'Id',\n  field: 'id',\n  type: 'numeric',\n  hidden: true\n}, {\n  title: 'Producto',\n  field: 'name'\n}, {\n  title: 'Descripcion',\n  field: 'description'\n}, {\n  title: 'Cantidad',\n  field: 'quantity',\n  type: 'numeric'\n}, {\n  title: 'Precio / Unidad',\n  field: 'price_unity',\n  type: 'numeric'\n}, {\n  title: 'Precio Total',\n  field: 'total_price',\n  type: 'numeric'\n}];\nconst tableIcons = {\n  Add: forwardRef((props, ref) => __jsx(AddBox, _extends({}, props, {\n    ref: ref,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }))),\n  Check: forwardRef((props, ref) => __jsx(Check, _extends({}, props, {\n    ref: ref,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }))),\n  Clear: forwardRef((props, ref) => __jsx(Clear, _extends({}, props, {\n    ref: ref,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }))),\n  Delete: forwardRef((props, ref) => __jsx(DeleteOutline, _extends({}, props, {\n    ref: ref,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }))),\n  DetailPanel: forwardRef((props, ref) => __jsx(ChevronRight, _extends({}, props, {\n    ref: ref,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }))),\n  Edit: forwardRef((props, ref) => __jsx(Edit, _extends({}, props, {\n    ref: ref,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }))),\n  Export: forwardRef((props, ref) => __jsx(SaveAlt, _extends({}, props, {\n    ref: ref,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }))),\n  Filter: forwardRef((props, ref) => __jsx(FilterList, _extends({}, props, {\n    ref: ref,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }))),\n  FirstPage: forwardRef((props, ref) => __jsx(FirstPage, _extends({}, props, {\n    ref: ref,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }))),\n  LastPage: forwardRef((props, ref) => __jsx(LastPage, _extends({}, props, {\n    ref: ref,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }))),\n  NextPage: forwardRef((props, ref) => __jsx(ChevronRight, _extends({}, props, {\n    ref: ref,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }))),\n  PreviousPage: forwardRef((props, ref) => __jsx(ChevronLeft, _extends({}, props, {\n    ref: ref,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }))),\n  ResetSearch: forwardRef((props, ref) => __jsx(Clear, _extends({}, props, {\n    ref: ref,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }))),\n  Search: forwardRef((props, ref) => __jsx(Search, _extends({}, props, {\n    ref: ref,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }))),\n  SortArrow: forwardRef((props, ref) => __jsx(ArrowDownward, _extends({}, props, {\n    ref: ref,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }))),\n  ThirdStateCheck: forwardRef((props, ref) => __jsx(Remove, _extends({}, props, {\n    ref: ref,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }))),\n  ViewColumn: forwardRef((props, ref) => __jsx(ViewColumn, _extends({}, props, {\n    ref: ref,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  })))\n};\n\nclass TableUsers extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      products: [] //isLoading: false // Par défaut à false car il n'y a pas de chargement tant qu'on ne lance pas de recherche        \n\n    };\n\n    this._loadProducts();\n  }\n\n  async _loadProducts() {\n    const res = await fetch('http://localhost:8080/products/');\n    const data = await res.json(); //console.log(`Show data fetched. Count: ${data.length}`  );\n\n    this.setState({\n      products: [...this.state.products, ...data] // une autre sintaxys  films: this.state.films.concat(data.results)\n      // films: data.results,  // une autre sintaxys  films: this.state.films.concat(data.results)\n\n    }); //  console.log(\"Rowsusu\"+this.state.numRows)\n  }\n\n  render() {\n    return __jsx(Paper, {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, __jsx(MaterialTable, {\n      icons: tableIcons,\n      title: \"Lista de Productos\",\n      columns: columns,\n      data: this.state.products,\n      actions: [{\n        icon: LocalMallIcon,\n        tooltip: 'Detalles producto',\n        onClick: (event, rowData) => //alert(\"You saved \" + rowData.name)window.location.href\n        window.location.href = `/user/${rowData.id_Document}`\n      }],\n      editable: {\n        onRowAdd: newData => new _Promise(resolve => {\n          setTimeout(() => {\n            resolve();\n\n            _createProduct(newData);\n\n            this.setState({\n              products: [...this.state.products, newData]\n            });\n          }, 600);\n        }),\n        onRowUpdate: (newData, oldData) => new _Promise(resolve => {\n          setTimeout(() => {\n            resolve();\n\n            if (oldData) {\n              let toPut = _Object$values(newData);\n\n              var arraytoPut = [{\n                id: toPut[0],\n                name: toPut[1],\n                description: toPut[2],\n                quantity: _parseInt(toPut[3]),\n                price_unity: _parseInt(toPut[4]),\n                total_price: _parseInt(toPut[5])\n              }]; //   console.log(\"toPut> \" + JSON.stringify(toPut))\n\n              _updateProduct(arraytoPut);\n\n              this.setState(() => {\n                //  console.log(\"User to be update: \" + oldData.tableData.id)\n                // console.log(\"User to be update: \" + JSON.stringify(this.state.users[oldData.tableData.id]))\n                this.state.products[oldData.tableData.id] = newData; // console.log(\"User already update: \" + JSON.stringify(this.state.users[oldData.tableData.id]))\n                //console.log(\"Do something to merge data\" + JSON.stringify([...this.state.users, newData]) )\n\n                return {\n                  products: [...this.state.products]\n                };\n              });\n            }\n          }, 600);\n        }),\n        onRowDelete: oldData => new _Promise(resolve => {\n          setTimeout(() => {\n            resolve();\n            console.log(_JSON$stringify(oldData));\n\n            _deleteProduct(oldData);\n\n            this.setState(() => {\n              return {\n                products: this.state.products.filter(item => item.id !== oldData.id)\n              };\n            });\n          }, 600);\n        })\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default TableUsers;","map":{"version":3,"sources":["C:/Users/Riano/Repo/NextjsAppforPays/components/TableProducts.js"],"names":["Component","MaterialTable","forwardRef","AddBox","ArrowDownward","Check","ChevronLeft","ChevronRight","Clear","DeleteOutline","Edit","FilterList","FirstPage","LastPage","Remove","SaveAlt","Search","ViewColumn","_createProduct","_updateProduct","_deleteProduct","AccountCircleIcon","Paper","LocalMallIcon","columns","title","field","type","hidden","tableIcons","Add","props","ref","Delete","DetailPanel","Export","Filter","NextPage","PreviousPage","ResetSearch","SortArrow","ThirdStateCheck","TableUsers","constructor","state","products","_loadProducts","res","fetch","data","json","setState","render","icon","tooltip","onClick","event","rowData","window","location","href","id_Document","onRowAdd","newData","resolve","setTimeout","onRowUpdate","oldData","toPut","arraytoPut","id","name","description","quantity","price_unity","total_price","tableData","onRowDelete","console","log","filter","item"],"mappings":"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","sourcesContent":["import  { Component } from 'react';\r\nimport MaterialTable from 'material-table';\r\nimport { forwardRef } from 'react';\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport { _createProduct } from \"../actions/productAction\";\r\nimport { _updateProduct } from \"../actions/productAction\";\r\nimport { _deleteProduct } from \"../actions/productAction\";\r\nimport \"./Table.scss\"\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport LocalMallIcon from '@material-ui/icons/LocalMall';\r\n\r\nconst columns =  [\r\n {title:'Id', field:'id', type:'numeric', hidden: true},\r\n  { title: 'Producto', field: 'name' },\r\n  { title: 'Descripcion', field: 'description' },\r\n  {\r\n    title: 'Cantidad',\r\n    field:'quantity',\r\n    type: 'numeric',\r\n  },\r\n  {\r\n    title: 'Precio / Unidad',\r\n    field:'price_unity',\r\n    type: 'numeric',\r\n  },\r\n  {\r\n    title: 'Precio Total',\r\n    field:'total_price',\r\n    type: 'numeric',\r\n  }\r\n\r\n]\r\nconst tableIcons = {\r\n  Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n  Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n  Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n  DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n  Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n  Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n  Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n  FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n  LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n  NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n  PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n  ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n  SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\r\n  ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n  ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />),\r\n  \r\n};\r\n\r\nclass TableUsers extends Component {\r\n  constructor (props) {\r\n    super(props)\r\n    this.state = {\r\n      products: [],\r\n      \r\n      //isLoading: false // Par défaut à false car il n'y a pas de chargement tant qu'on ne lance pas de recherche        \r\n     }\r\n     this._loadProducts() \r\n  }\r\n  async _loadProducts(){\r\n    const res = await fetch('http://localhost:8080/products/');\r\n    const data = await res.json();\r\n    \r\n    //console.log(`Show data fetched. Count: ${data.length}`  );\r\n    \r\n \r\n    this.setState(\r\n      { \r\n        products: [...this.state.products, ...data],  // une autre sintaxys  films: this.state.films.concat(data.results)\r\n       // films: data.results,  // une autre sintaxys  films: this.state.films.concat(data.results)\r\n     \r\n       \r\n      }\r\n    )\r\n  //  console.log(\"Rowsusu\"+this.state.numRows)\r\n  }\r\n \r\n  render() {\r\n  \r\n   \r\n    return (\r\n      \r\n     <Paper className='container'>\r\n    <MaterialTable\r\n       icons={tableIcons}\r\n       \r\n       title=\"Lista de Productos\"\r\n       columns={columns}\r\n       data={this.state.products}\r\n       actions={[\r\n        {\r\n          \r\n          icon: LocalMallIcon,\r\n          tooltip: 'Detalles producto',\r\n          onClick: (event, rowData) => //alert(\"You saved \" + rowData.name)window.location.href\r\n          window.location.href = `/user/${rowData.id_Document}`\r\n           \r\n        }\r\n       ]}\r\n    \r\n      editable={{\r\n        onRowAdd: newData =>\r\n          new Promise(resolve => {\r\n            setTimeout(() => {\r\n              resolve();\r\n              _createProduct(newData)\r\n             \r\n              this.setState(\r\n                { \r\n                  products: [...this.state.products,newData]\r\n                }\r\n              )              \r\n            }, 600);\r\n          }),\r\n        onRowUpdate: (newData, oldData) =>\r\n          new Promise(resolve => {\r\n            setTimeout(() => {\r\n              resolve();\r\n              if (oldData) {                            \r\n                let toPut = Object.values(newData);\r\n                var arraytoPut = [{id:toPut[0],name:toPut[1],description:toPut[2],quantity:parseInt(toPut[3]),price_unity:parseInt(toPut[4]),total_price:parseInt(toPut[5])}]\r\n               //   console.log(\"toPut> \" + JSON.stringify(toPut))\r\n                  _updateProduct(arraytoPut);              \r\n                  this.setState(() => {\r\n                  //  console.log(\"User to be update: \" + oldData.tableData.id)\r\n\r\n                   // console.log(\"User to be update: \" + JSON.stringify(this.state.users[oldData.tableData.id]))\r\n                    this.state.products[oldData.tableData.id] = newData;\r\n                // console.log(\"User already update: \" + JSON.stringify(this.state.users[oldData.tableData.id]))\r\n                    //console.log(\"Do something to merge data\" + JSON.stringify([...this.state.users, newData]) )\r\n                  return({\r\n                    products:[...this.state.products]\r\n                  \r\n                  })                 \r\n                  });\r\n                                                         \r\n              }\r\n            }, 600);\r\n          }),\r\n        onRowDelete: oldData =>\r\n          new Promise(resolve => {\r\n            setTimeout(() => {\r\n              resolve();\r\n              console.log(JSON.stringify(oldData))\r\n              _deleteProduct(oldData)\r\n              this.setState(() => {\r\n      \r\n                return { products:this.state.products.filter(item => item.id !== oldData.id) };\r\n              });\r\n            }, 600);\r\n          }),\r\n     \r\n      }}\r\n    />\r\n    </Paper>\r\n    \r\n    \r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default TableUsers;\r\n"]},"metadata":{},"sourceType":"module"}