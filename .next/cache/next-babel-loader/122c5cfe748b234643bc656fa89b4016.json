{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport fetch from 'isomorphic-fetch';\nexport function _createProduct(data) {\n  return fetch('http://localhost:8080/products/', {\n    method: 'POST',\n    body: _JSON$stringify(data),\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    }\n  }).then(function (res) {\n    console.log(\"Reponse\" + _JSON$stringify(res));\n    return res;\n  })[\"catch\"](function (err) {\n    return err;\n  });\n}\nexport function _updateProduct(data) {\n  //  console.log(\"toPut> \" + JSON.stringify(data))\n  return fetch('http://localhost:8080/products/', {\n    method: 'PUT',\n    body: _JSON$stringify(data),\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    }\n  }).then(function (res) {\n    console.log(\"Reponse\" + _JSON$stringify(res));\n    return res;\n  })[\"catch\"](function (err) {\n    return err;\n  });\n}\nexport function _deleteProduct(data) {\n  console.log('datadelete' + data.id);\n  return fetch('http://localhost:8080/products/' + data.id, {\n    method: 'DELETE',\n    body: _JSON$stringify(data),\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    }\n  }).then(function (res) {\n    //console.log(\"Reponse\" + JSON.stringify(res))\n    return res;\n  })[\"catch\"](function (err) {\n    return err;\n  });\n}\nexport function _getProductbyid(_x) {\n  return _getProductbyid2.apply(this, arguments);\n}\n\nfunction _getProductbyid2() {\n  _getProductbyid2 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(data) {\n    var res, responseJson;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return fetch('http://localhost:8080/products/' + data);\n\n          case 2:\n            res = _context.sent;\n            _context.next = 5;\n            return res.json();\n\n          case 5:\n            responseJson = _context.sent;\n            return _context.abrupt(\"return\", responseJson);\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _getProductbyid2.apply(this, arguments);\n}\n\nexport function _updateImageProduct(_x2, _x3) {\n  return _updateImageProduct2.apply(this, arguments);\n}\n\nfunction _updateImageProduct2() {\n  _updateImageProduct2 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee2(file, id) {\n    var formData;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            formData = new FormData();\n            formData.append(\"file\", file);\n            formData.append('name', 'nametest');\n            formData.append('description', 'some value test'); // console.log(this.state.selectedFile);\n            //console.log('http://localhost:8080/users/'+this.state.idusuario+ '/avatar')\n\n            return _context2.abrupt(\"return\", fetch('http://localhost:8080/products/' + id + '/image', {\n              method: 'POST',\n              body: formData\n            }).then(function (res) {\n              //console.log(\"Reponse\" + res)\n              return res;\n            })[\"catch\"](function (err) {\n              return err;\n            }));\n\n          case 5:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n  return _updateImageProduct2.apply(this, arguments);\n}","map":{"version":3,"sources":["C:/Users/Riano/Repo/NextjsAppforPays/actions/productAction.js"],"names":["fetch","_createProduct","data","method","body","headers","then","res","console","log","err","_updateProduct","_deleteProduct","id","_getProductbyid","json","responseJson","_updateImageProduct","file","formData","FormData","append"],"mappings":"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","sourcesContent":["import fetch from 'isomorphic-fetch';\r\nexport function _createProduct(data) {\r\n    return fetch('http://localhost:8080/products/', {\r\n        method: 'POST',\r\n         \r\n        body: JSON.stringify(data),\r\n        headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json'\r\n        }\r\n    }).then(res => {\r\n       console.log(\"Reponse\" + JSON.stringify(res))\r\n        return res;\r\n    }).catch(err => err);\r\n}\r\nexport function _updateProduct(data) {\r\n  //  console.log(\"toPut> \" + JSON.stringify(data))\r\n    return fetch('http://localhost:8080/products/', {\r\n        method: 'PUT',\r\n         \r\n        body: JSON.stringify(data),\r\n        headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json'\r\n        }\r\n    }).then(res => {\r\n       console.log(\"Reponse\" + JSON.stringify(res))\r\n        return res;\r\n    }).catch(err => err);\r\n}\r\nexport function _deleteProduct(data) {\r\n    console.log('datadelete' + data.id);\r\n    return fetch('http://localhost:8080/products/'+data.id, {\r\n        method: 'DELETE',\r\n         \r\n        body: JSON.stringify(data),\r\n        headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json'\r\n        }\r\n    }).then(res => {\r\n       //console.log(\"Reponse\" + JSON.stringify(res))\r\n        return res;\r\n    }).catch(err => err);\r\n}\r\n\r\nexport async function _getProductbyid(data) {\r\n   // console.log('getUserData>' + data);\r\n    const res = await fetch('http://localhost:8080/products/'+ data);\r\n    const responseJson = await res.json();\r\n  // console.log(\"return\" + JSON.stringify(responseJson))\r\n    return responseJson\r\n}\r\nexport async function _updateImageProduct(file,id){\r\n    var formData = new FormData();\r\n    formData.append(\"file\",file);\r\n    formData.append('name', 'nametest');\r\n    formData.append('description', 'some value test');\r\n   // console.log(this.state.selectedFile);\r\n//console.log('http://localhost:8080/users/'+this.state.idusuario+ '/avatar')\r\n\r\nreturn fetch('http://localhost:8080/products/'+id+ '/image', {\r\nmethod: 'POST',\r\n \r\nbody: formData,\r\n\r\n}).then(res => {\r\n\r\n//console.log(\"Reponse\" + res)\r\nreturn res;\r\n}).catch(err => err);\r\n\r\n\r\n}"]},"metadata":{},"sourceType":"module"}